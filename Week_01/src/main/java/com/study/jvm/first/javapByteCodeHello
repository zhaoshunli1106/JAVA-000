zsl@promote first % javap -c -verbose ByteCodeHello.class
Classfile /Users/zsl/IdeaProjects/JAVA-000/Week_01/src/main/java/com/study/jvm/first/ByteCodeHello.class
  Last modified 2020-10-17; size 800 bytes
  MD5 checksum 6d2364a8059b53b43f8fbc7d56198d73
  Compiled from "ByteCodeHello.java"
public class com.study.jvm.first.ByteCodeHello
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Methodref          #13.#23        // java/lang/Object."<init>":()V
   #2 = Fieldref           #24.#25        // java/lang/System.out:Ljava/io/PrintStream;
   #3 = String             #26            // hello,biteCode
   #4 = Methodref          #27.#28        // java/io/PrintStream.println:(Ljava/lang/String;)V
   #5 = Class              #29            // java/lang/StringBuilder
   #6 = Methodref          #5.#23         // java/lang/StringBuilder."<init>":()V
   #7 = Methodref          #5.#30         // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   #8 = String             #31            // 大于3
   #9 = Methodref          #5.#32         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #10 = Methodref          #5.#33         // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #11 = String             #34            // 小于或等于3
  #12 = Class              #35            // com/study/jvm/first/ByteCodeHello
  #13 = Class              #36            // java/lang/Object
  #14 = Utf8               <init>
  #15 = Utf8               ()V
  #16 = Utf8               Code
  #17 = Utf8               LineNumberTable
  #18 = Utf8               main
  #19 = Utf8               ([Ljava/lang/String;)V
  #20 = Utf8               StackMapTable
  #21 = Utf8               SourceFile
  #22 = Utf8               ByteCodeHello.java
  #23 = NameAndType        #14:#15        // "<init>":()V
  #24 = Class              #37            // java/lang/System
  #25 = NameAndType        #38:#39        // out:Ljava/io/PrintStream;
  #26 = Utf8               hello,biteCode
  #27 = Class              #40            // java/io/PrintStream
  #28 = NameAndType        #41:#42        // println:(Ljava/lang/String;)V
  #29 = Utf8               java/lang/StringBuilder
  #30 = NameAndType        #43:#44        // append:(I)Ljava/lang/StringBuilder;
  #31 = Utf8               大于3
  #32 = NameAndType        #43:#45        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #33 = NameAndType        #46:#47        // toString:()Ljava/lang/String;
  #34 = Utf8               小于或等于3
  #35 = Utf8               com/study/jvm/first/ByteCodeHello
  #36 = Utf8               java/lang/Object
  #37 = Utf8               java/lang/System
  #38 = Utf8               out
  #39 = Utf8               Ljava/io/PrintStream;
  #40 = Utf8               java/io/PrintStream
  #41 = Utf8               println
  #42 = Utf8               (Ljava/lang/String;)V
  #43 = Utf8               append
  #44 = Utf8               (I)Ljava/lang/StringBuilder;
  #45 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #46 = Utf8               toString
  #47 = Utf8               ()Ljava/lang/String;
{
  public com.study.jvm.first.ByteCodeHello();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 9: 0

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=1
         0: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;
         3: ldc           #3                  // String hello,biteCode
         5: invokevirtual #4                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
         8: iconst_0
         9: istore_1
        10: iload_1
        11: bipush        10
        13: if_icmpge     80
        16: iload_1
        17: iconst_3
        18: if_icmple     49
        21: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;
        24: new           #5                  // class java/lang/StringBuilder
        27: dup
        28: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
        31: iload_1
        32: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        35: ldc           #8                  // String 大于3
        37: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        40: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        43: invokevirtual #4                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        46: goto          74
        49: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;
        52: new           #5                  // class java/lang/StringBuilder
        55: dup
        56: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
        59: iload_1
        60: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        63: ldc           #11                 // String 小于或等于3
        65: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        68: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        71: invokevirtual #4                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        74: iinc          1, 1
        77: goto          10
        80: return
      LineNumberTable:
        line 12: 0
        line 13: 8
        line 14: 16
        line 15: 21
        line 17: 49
        line 13: 74
        line 20: 80
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 10
          locals = [ int ]
        frame_type = 38 /* same */
        frame_type = 24 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5
}
SourceFile: "ByteCodeHello.java"